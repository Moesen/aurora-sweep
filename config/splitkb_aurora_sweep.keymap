/*
 * Copyright (c) 2022 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>


&mt {
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp TAB>;
        };

         combo_tab {
            timeout-ms = <50>;
            key-positions = <10 11>;
            bindings = <&kp ESC>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
            };
          };

        keymap {
                compatible = "zmk,keymap";

            default_layer {
        bindings = <
        &kp Q &kp W &kp E &kp R &kp T                       &kp Y &kp U  &kp I    &kp O   &kp P
        &mt LSHIFT A &kp S &kp D &kp F &kp G                               &kp H &kp J &kp K &kp L &kp SQT
        &mt LCTRL Z &kp X &kp C &kp V &kp B                      &kp N &kp M  &kp COMMA &kp DOT &kp SLASH
                        &kp LMETA &lt 2 RET                  &lt 1 SPACE &kp RALT
        >;
        };

            right_layer {
        bindings = <
        &kp N1  &kp N2    &kp N3    &kp N4    &kp N5     &kp N6 &kp N7 &kp N8 &kp N9 &kp N0
        &kp EXCL    &kp AT    &kp HASH      &kp DLLR     &kp PRCNT         &kp CARET &kp AMPS  &kp STAR &kp EQUAL  &kp MINUS
        &trans     &trans    &trans &trans  &kp UNDER     &kp MINUS &trans &trans &trans  &trans
                        &kp LMETA &lt 2 RET                     &mo 1 &kp RALT
        >;
        };

        left_layer {
        bindings = <
        &kp F9  &kp F10 &kp F11  &kp F12  &trans             &trans  &trans &trans &trans &kp BSPC
        &kp F5  &kp F6  &kp F7  &kp F8  &trans           &kp LEFT &kp DOWN  &kp UP  &kp RIGHT   &trans
        &kp F1  &kp F2 &kp F3 &kp F4   &trans             &trans &trans &trans &trans  &trans
                      &kp LMETA &mo 2                &lt 1 SPACE  &kp RALT
        >;
        };

        tri_layer {
        bindings = <
        &kp GRAVE  &trans    &trans    &trans    &trans             &trans &kp LBKT   &kp RBKT   &trans  &kp DEL
        &mt LSHIFT TILDE &trans &trans &trans &trans                          &trans &kp LPAR  &kp RPAR &trans &kp SEMI
        &mt LCTRL &trans &trans &trans &kp UNDER                 &kp MINUS &trans  &kp LBRC  &kp RBRC &kp SLASH
                     &trans &trans                      &trans &trans
        >;
        };

    };
};
